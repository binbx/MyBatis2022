<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bin_bx.mybatis.mapper.DynamicSQLMapper">


    <!--通过list集合实现批量添加 int insertMoreByList(@Param("emps") List<Emp> emps);-->
    <insert id="insertMoreByList">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.sex},#{emp.email},null)
        </foreach>
    </insert>



    <!--通过数组实现批量删除 int deleteMoreByArray(@Param("eids") Integer[] eids);-->
    <!--
        foreach
            collection:设置需要循环的数组或集合
            item:表示数组或集合中的每一个数据
            separator:循环体之间的分割符
            open:foreach标签所循环的所有内容的开始符
            close:foreach标签所循环的所有内容的结束符
    -->
    <delete id="deleteMoreByArray">
        <!--批量删除第二种方法-->
        delete from t_emp where
        <foreach collection="eids" item="eid" separator="or">
            eid = #{eid}
        </foreach>

        <!--批量删除第一种方法-->
        <!--delete from t_emp where eid in
        <foreach collection="eids" item="eid" separator="," open="(" close=")">
            #{eid}
        </foreach>-->
    </delete>



    <!--测试choose、when、otherwise-->
    <!--List<Emp> getEmpByChoose(Emp emp);-->
    <!--
        choose、when、otherwise，相当于if...else if...else
        when至少要有一个，otherwise最多只能有一个
    -->
    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
        <where>
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="sex != null and sex != ''">
                    sex = #{sex}
                </when>
                <when test="email != null and email != ''">
                    email = #{email}
                </when>
                <otherwise>
                    did = 1
                </otherwise>
            </choose>
        </where>
    </select>



    <!--设置SQL片段
        设置SQL片段：<sql id="empColumns">eid,emp_name,age,sex,email</sql>
        引用SQL片段：<include refid="empColumns"></include>
    -->
    <sql id="empColumns">eid,emp_name,age,sex,email</sql>


    <!--实现多条件查询第三种方式-->
    <!--多条件查询 List<Emp> getEmpByCondition(Emp emp);-->
    <!--
        trim：
            若标签中有内容时：
                prefix|suffix：将trim标签中内容前面或后面添加指定内容
                suffixOverrides|prefixOverrides：将trim标签中内容前面或后面去掉指定内容
            若标签中没有内容时，trim标签也没有任何效果
    -->
    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="empColumns"></include> from t_emp
        <trim prefix="where" suffixOverrides="and|or">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
                age = #{age} or
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex} and
            </if>
            <if test="email != null and email != ''">
                email = #{email}
            </if>
        </trim>
    </select>
    <!--实现多条件查询第二种方式-->
    <select id="getEmpByConditionTwo" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                or sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </where>
    </select>
    <!--实现多条件查询第一种方式 -->
    <select id="getEmpByConditionOne" resultType="Emp">
        select * from t_emp where 1=1
        <if test="empName != null and empName != ''">
            emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="sex != null and sex != ''">
            and sex = #{sex}
        </if>
        <if test="email != null and email != ''">
            and email = #{email}
        </if>
    </select>

</mapper>